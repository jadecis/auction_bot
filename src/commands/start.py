from aiogram.types import Message, CallbackQuery
from aiogram.dispatcher.filters import Text, CommandStart
from aiogram.dispatcher import FSMContext
from src.keyboards.reply import main_menu
from loader import dp, run

@dp.message_handler(CommandStart(), state="*")
async def start_handler(msg: Message, state: FSMContext):
    await state.finish()
    await msg.answer(f"""
üèÜ–°—Ç–∞–Ω—å –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º –∞—É–∫—Ü–∏–æ–Ω–∞!ü•∏ 
üë•–°–æ—Ä–µ–≤–Ω—É–π—Å—è —Å –¥—Ä—É–∑—å—è–º–∏! 
üö¥ –û–±–≥–æ–Ω—è–π –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤! 
üí∞ –ó–∞–±–∏—Ä–∞–π –æ–±—â–∏–π –±–∞–Ω–∫ –æ—Ç –≤—Å–µ—Ö —Å—Ç–∞–≤–æ–∫ –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –Ω–∞ —ç—Ç–æ–º!üè¶""", reply_markup=main_menu)
    
@dp.message_handler(commands='off', state="*")
async def start_handler(msg: Message, state: FSMContext):
    print(run.RUN_BOT)
    await state.finish()
    run.off()

@dp.message_handler(commands='on', state="*")
async def start_handler(msg: Message, state: FSMContext):
    await state.finish()
    run.on()
    
@dp.callback_query_handler(text_contains='acceptwith_')
async def acceptout_handler(call: CallbackQuery):
    bill_id= call.data.replace('acceptwith_', '')
    print(bill_id)
    await call.message.edit_text(f'{call.message.text}\n\n'
                                 +f"‚úÖ –í—ã–≤–æ–¥ –ü–û–î–¢–í–ï–†–ñ–î–ï–ù")