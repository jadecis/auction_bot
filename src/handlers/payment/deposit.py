from loader import dp, db, y_pay, bot
from src.state.states import Deposit
from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery, Message
import uuid
from config import YOOMONEY_WALLET
from yoomoney import Quickpay
from src.keyboards.inline import payment_menu


@dp.callback_query_handler(text_contains='cash_pay')
async def pay_handler(call: CallbackQuery, state: FSMContext):
    await call.message.edit_text("üè¶ –ü–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á—ë—Ç (–ö–æ–º–∏—Å—Å–∏—è 3%)\n\n"
                                 +"üìå –ú–∏–Ω–∏–º—É–º: <b>100 üí≤</b>\n"
                                 +"üìå –ú–∞–∫—Å–∏–º—É–º: <b>5000 üí≤</b>\n\n"
                                +f"<i>–û—Ç–ø—Ä–∞–≤—å —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:</i>")
    await Deposit.sum.set()     

@dp.message_handler(content_types=['text'], state=Deposit.sum)
async def dep_sum_handler(msg: Message, state: FSMContext):
    try:
        price = float(msg.text)
        if 5000 >= price >= 10:
            bill_id= str(uuid.uuid4())
            bill = Quickpay(
                receiver=YOOMONEY_WALLET,
                quickpay_form='shop',
                targets='Photo bot',
                paymentType='SB',
                sum=price,
                label=bill_id)
        await msg.answer(text=f'üìç <b>–°—á–µ—Ç –¥–ª—è –æ–ø–ª–∞—Ç—ã –≥–æ—Ç–æ–≤</b> üìç\n\n<i>–î–ª—è –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üí≥\n\n–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç–µ–∂¬ª, –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞</i>',
                        reply_markup=payment_menu(url=bill.redirected_url,
                                                 bill_id=bill_id))
    except Exception as ex:
        print(ex)
        await msg.answer(text=f"‚ùå <b>–ù–ï–í–ï–†–ù–ê–Ø –°–£–ú–ú–ê</b> ‚ùå\n\n"
                         +f"üìå –ú–∏–Ω–∏–º—É–º: <b>10 üí≤</b>\n"
                        +f"üìå –ú–∞–∫—Å–∏–º—É–º: <b>5000 üí≤</b>\n\n"
                         +f"<i>–û—Ç–ø—Ä–∞–≤—å –Ω–æ–≤—É—é —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:</i>")
       
@dp.callback_query_handler(text_contains='check_bill', state= "*")
async def check_bill_handler(call: CallbackQuery, state: FSMContext):
    await state.finish()
    bill_id= call.data.replace('check_bill', "")
    history = y_pay.operation_history(label=bill_id)
    try:
        result= history.operations[-1]
        status=result.status
        if status== 'PAID' or status == 'success' or status == 'paid':
            print(result)
            db.up_balance(
                call.message.chat.id,
                result.amount
            )
            await call.message.edit_text("–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")
            await state.finish()
    except Exception as ex:
        print(ex)
        await bot.answer_callback_query(call.id, "‚ùå –û–ø–ª–∞—Ç–∞ –Ω–µ –ø—Ä–æ—à–ª–∞!\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É!", show_alert=True)